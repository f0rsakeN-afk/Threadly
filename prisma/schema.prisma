// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId                   String      @id @default(cuid())
  email                    String      @unique
  username                 String      @unique
  password                 String
  passwordResetToken       String?
  passwordResetTokenExpiry DateTime?
  createdAt                DateTime    @default(now())
  subreddits               Subreddit[]
  posts                    Post[]
  votes                    Vote[]
  comments                 Comment[]
}

model Subreddit {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  createdAt DateTime @default(now())

  creator   User   @relation(fields: [creatorId], references: [userId])
  creatorId String
  posts     Post[]
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  createdAt DateTime @default(now())

  author   User   @relation(fields: [authorId], references: [userId])
  authorId String

  subreddit   Subreddit @relation(fields: [subredditId], references: [id], onDelete: Cascade)
  subredditId String
  votes       Vote[]
  comments    Comment[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  author   User   @relation(fields: [authorId], references: [userId])
  authorId String

  parent   Comment?  @relation("CommentToComment", fields: [parentId], references: [id])
  parentId String?
  replies  Comment[] @relation("CommentToComment")
}

model Vote {
  id        String   @id @default(cuid())
  value     Int
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [userId])
  userId String

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@unique([userId, postId])
}
